version: '3.9'
services:
  proxy:
    image: traefik:latest
    networks:
      - monitoring
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8080
        mode: ingress
    command:
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--api'
      - '--accesslog=true'
      - '--log.level=DEBUG'
      - '--metrics'
      - '--metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000'
      - '--providers.docker'
      - '--providers.docker.swarmMode'
      - '--providers.docker.watch'
      - '--providers.file.watch'
      - '--providers.file.directory=/etc/traefik/dynamic_conf'
      - '--providers.docker.exposedbydefault=false'
    volumes:
      - ./certs:/letsencrypt:ro
      - ./configs/traefik-certs.yml:/etc/traefik/dynamic_conf/conf.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=${TIMEZONE}
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.proxy.entrypoints=web"
        - "traefik.http.services.${STACK_NAME}_proxy.loadbalancer.server.port=8080"
      env_file:
        - ./configs/stack.env

networks:
  monitoring:
    external: true